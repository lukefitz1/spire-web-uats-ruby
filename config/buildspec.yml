# AWS Build Specification

version: 0.2

env:
  variables:
    NODE_OPTIONS: '--max-old-space-size=14336'

# Define the commands that occur at each phase of the automated build process. This maps directly to the
# phases within the AWS CodeBuild console.  See
# https://us-east-2.console.aws.amazon.com/codebuild/home?region=us-east-2#/projects

phases:
  # The INSTALL phase installs Ruby
  install:
    commands:
      - APP_DIR=`pwd`
      - curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      - (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt-get -fy install)
      - rm -rf /tmp/google-chrome-stable_current_amd64.deb
      - sed -i 's|HERE/chrome"|HERE/chrome" --disable-setuid-sandbox --no-sandbox|g' "/opt/google/chrome/google-chrome"
      - google-chrome --version
      - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
      - apt-get -y update
      - apt-get -y install google-chrome-stable
      - gem install bundler

  # The BUILD phase
  build:
    commands:
      - bundle install

  # The POST BUILD phase - Wrapped all suite executions in a retry statment
  post_build:
    commands:
      - AWS_RUN=true
      - ERRORS_TO_CONSOLE=false
      - ERROR=0
#      - echo `bundle exec cucumber --version`
#      - COMMAND="/root/.rbenv/versions/2.7.1/bin/cucumber --tags @artist --format json -o test.json"
      - COMMAND="bundle exec cucumber"
      - eval $COMMAND
      - echo ERROR STATE AT THE END IS... $ERROR
      - exit $ERROR